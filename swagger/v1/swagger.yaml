---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/courses":
    get:
      summary: list courses
      responses:
        '200':
          description: successful
    post:
      summary: create course
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                name:
                  type: string
                price:
                  type: number
                course_type:
                  type: string
                start_date:
                  type: string
                end_date:
                  type: string
              required:
              - description
              - name
              - course_type
              - price
              - start_date
              - end_date
  "/api/v1/courses/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show course
      responses:
        '200':
          description: successful
    delete:
      summary: delete course
      responses:
        '200':
          description: successful
  "/api/v1/users/{user_id}/reservations":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    get:
      summary: list reservations
      responses:
        '200':
          description: successful
    post:
      summary: create reservation
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course_id:
                  type: number
              required:
              - course_id
  "/api/v1/users":
    get:
      summary: list users
      responses:
        '200':
          description: successful
    post:
      summary: create user
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
